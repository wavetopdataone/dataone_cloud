
server.port=8000


# 将来注册到eureka的服务名
spring.application.name=dataone-web
# eureka
eureka.client.service-url.defaultZone= http://localhost:9000/eureka/
eureka.client.register-with-eureka=true


# spring.mvc.view.suffix=.html
#datasource
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver


# spring.datasource.url=jdbc:mysql://47.103.108.82:3306/test?useUnicode=true&characterEncoding=UTF-8&useSSL=false
# 开发环境
 spring.datasource.url=jdbc:mysql://192.168.1.226:3306/dataone?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
 spring.datasource.username=root
 spring.datasource.password=888888
# 测试环境
#spring.datasource.url=jdbc:mysql://192.168.1.156:3306/dataone?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=Aa123456.
# 测试环境
#spring.datasource.url=jdbc:mysql://47.103.108.82:3306/dataone?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=Aa123456.
# 生产环境
# spring.datasource.url=
# spring.datasource.username=
# spring.datasource.password=


# JPA �������
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#logback
#logging.level.com.example=INFO
#logging.file=dataone.log
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.config=classpath:logback-test.xml
#spring.datasource.hikari.maximum = 2
# ����Ϊ���ӳصĲ������ã�Ӧ�õ�������������Դ��
 spring.datasource.initialSize=5
 spring.datasource.minIdle=5
 spring.datasource.maxActive=20
# ���û�ȡ���ӵȴ���ʱ��ʱ��
 spring.datasource.maxWait=60000
# ���ü����òŽ���һ�μ�⣬�����Ҫ�رյĿ������ӣ���λ�Ǻ���
 spring.datasource.timeBetweenEvictionRunsMillis=60000
# ����һ�������ڳ�����С�����ʱ�䣬��λ�Ǻ���
 spring.datasource.minEvictableIdleTimeMillis=300000
 spring.datasource.validationQuery=SELECT 1 FROM DUAL
 spring.datasource.testWhileIdle=true
 spring.datasource.testOnBorrow=false
 spring.datasource.testOnReturn=false

# json����
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
# jedis����
# host=127.0.0.1
# port=6379
# maxTotal=50
# maxIdle=10

# aop
spring.aop.auto=true

# ElasticSearch����
# �����ַ
# spring.data.elasticsearch.cluster-nodes=localhost:9300
# �������ӳ�ʱʱ��
# spring.data.elasticsearch.properties.transport.tcp.connect_timeout = 120s

# �շ�����
# spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jackson.property-naming-strategy= CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
#发送人的邮箱
spring.mail.host=smtp.163.com
spring.mail.username=sfhzyxzh@163.com
spring.mail.password=xue199709019072
spring.mail.default-encoding=UTF-8

#server.ssl.key-store=classpath:keystore.p12
#server.ssl.key-store-password=019072
#server.ssl.keyStoreType=PKCS12
#server.ssl.keyAlias=hpgary

#redis
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=192.168.1.153
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=10000


#kafka消费者
#spring.kafka.consumer.group-id=test-consumer-group
#spring.kafka.bootstrap-servers=192.168.1.153:9092,192.168.1.178:9092,192.168.1.184:9092